import { PeerClientProvider } from "@extreal-dev/extreal.integration.p2p.webrtc";
type WebRtcConfig = {
    ngoServerClientId: number;
    isDebug: boolean;
};
type WebRtcCallbacks = {
    onConnected: (clientId: number) => void;
    onDataReceived: (clientId: number, payload: string) => void;
    onDisconnected: (clientId: number) => void;
};
declare class WebRtcClient {
    private readonly label;
    private readonly isDebug;
    private readonly webRtcConfig;
    private readonly dcMap;
    private readonly idMapper;
    private readonly disconnectedRemoteClients;
    private readonly getPeerClient;
    private readonly callbacks;
    private cancel;
    constructor(webRtcConfig: WebRtcConfig, getPeerClient: PeerClientProvider, callbacks: WebRtcCallbacks);
    private createPc;
    private handleDc;
    private closePc;
    connect: () => Promise<void>;
    private readonly hostIdNotFound;
    private isHostIdNotFound;
    private getHostId;
    send: (clientId: number, payload: string) => void;
    clear: () => void;
    disconnectRemoteClient: (clientId: number) => Set<number>;
}
export { WebRtcClient };
